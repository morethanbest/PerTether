version: '2'

services:

  bootnode:
    container_name: bootnode
    image: ethereum/client-go:v1.8.26
    command: sh -c 'sleep 1000000'
#    command: bootnode -genkey bootnode.key && bootnode -nodekey=bootnode.key > bootnode.log&
    working_dir: /data
    volumes:
    - ./tmp/bootnode:/data
    ports:
    - 30301:30301
#
#  node0:
#    container_name: node0
#    image: ethereum/client-go:v1.8.26
#    command: geth --datadir node0 init genesis.json && geth --datadir ./ --networkid 88 --rpcport 8545 --rpc --rpcaddr 0.0.0.0 --rpcapi db,eth,net,web3,personal,admin,miner --bootnodes enode://4a9742409e3213c722814f2b39f6f7c9fec02482d2f0bfd917c243c0f7f02d341390420871cf04efb761fe2e7e7a5902738a51a17297dc522b25ea4dbd08324e@[::]:30301
#    #command: sh -c 'sleep 1000000'
#    working_dir: /data
#    volumes:
#    - tmp/:/data
#    ports:
#    - 8545:8545
#    - 30303:30303
#    depends_on:
#    - bootnode
#
#
#
#  node1:
#    container_name: node1
#    image: ethereum/client-go:v1.8.26
#    command: geth --datadir node1 init genesis.json && geth --datadir node1 --networkid 88 --rpcport 8545 --rpc --rpcaddr 0.0.0.0 --rpcapi db,eth,net,web3,personal,admin,miner --bootnodes enode://4a9742409e3213c722814f2b39f6f7c9fec02482d2f0bfd917c243c0f7f02d341390420871cf04efb761fe2e7e7a5902738a51a17297dc522b25ea4dbd08324e@[::]:30301
#    #command: sh -c 'sleep 1000000'
#    working_dir: /data
#    volumes:
#    - tmp/:/data
#    ports:
#    - 8546:8545
#    - 30304:30303
#    depends_on:
#    - bootnode





